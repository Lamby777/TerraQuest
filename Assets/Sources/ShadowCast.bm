
Sub CastShadow
    If Flag.CastShadows = 0 Then
        Dim i As Byte
        Dim ii As Byte
        For i = 1 To 30
            For ii = 1 To 40

                If TileData(ii, i + 1, 1) = 1 And TileData(ii, i, 2) = 0 Then
                    PutImage ((ii - 1) * 16, (i - 1) * 16)-(((ii - 1) * 16) + 15.75, ((i - 1) * 16) + 15.75), Texture.Shadows, , (0, 0)-(15, 15)
                End If

                If TileData(ii + 1, i, 1) = 1 And TileData(ii, i, 2) = 0 Then
                    PutImage ((ii - 1) * 16, (i - 1) * 16)-(((ii - 1) * 16) + 15.75, ((i - 1) * 16) + 15.75), Texture.Shadows, , (16, 0)-(31, 15)
                End If

                If TileData(ii - 1, i, 1) = 1 And TileData(ii, i, 2) = 0 Then
                    PutImage ((ii - 1) * 16, (i - 1) * 16)-(((ii - 1) * 16) + 15.75, ((i - 1) * 16) + 15.75), Texture.Shadows, , (32, 0)-(47, 15)
                End If

                If TileData(ii, i - 1, 1) = 1 And TileData(ii, i, 2) = 0 Then
                    PutImage ((ii - 1) * 16, (i - 1) * 16)-(((ii - 1) * 16) + 15.75, ((i - 1) * 16) + 15.75), Texture.Shadows, , (48, 0)-(63, 15)
                End If

                If TileData(ii, i, 3) = 1 Then

                    If TileData(ii, i + 1, 3) = 0 Then
                        PutImage ((ii - 1) * 16, (i - 1) * 16)-(((ii - 1) * 16) + 15.75, ((i - 1) * 16) + 15.75), Texture.Shadows, , (0, 0)-(15, 15)
                    End If

                    If TileData(ii + 1, i, 3) = 0 Then
                        PutImage ((ii - 1) * 16, (i - 1) * 16)-(((ii - 1) * 16) + 15.75, ((i - 1) * 16) + 15.75), Texture.Shadows, , (16, 0)-(31, 15)
                    End If

                    If TileData(ii - 1, i, 3) = 0 Then
                        PutImage ((ii - 1) * 16, (i - 1) * 16)-(((ii - 1) * 16) + 15.75, ((i - 1) * 16) + 15.75), Texture.Shadows, , (32, 0)-(47, 15)
                    End If

                    If TileData(ii, i - 1, 3) = 0 Then
                        PutImage ((ii - 1) * 16, (i - 1) * 16)-(((ii - 1) * 16) + 15.75, ((i - 1) * 16) + 15.75), Texture.Shadows, , (48, 0)-(63, 15)
                    End If

                End If
            Next
        Next
    End If
End Sub


Sub SpreadLight (updates)
    Dim as byte i, ii
    For i = 1 To 30
        For ii = 1 To 40
            LocalLightLevel(ii, i) = TileData(ii, i, 8)
        Next
    Next
    SpreadLight2 (updates)
End Sub
Sub SpreadLight2 (updates)
    Dim as byte i, ii, iii, iiii
    Static UpdateLimit
    If updates > 0 Then
        updates = 0
        For i = 1 To 30
            For ii = 1 To 40
                iiii = 1
                iii = 0

                For iii = 0 To 2

                    If LocalLightLevel(ii, i) < LocalLightLevel(ii + (iii - 1), i) Then LocalLightLevel(ii, i) = LocalLightLevel(ii + (iii - 1), i) - 1
                    If LocalLightLevel(ii, i) < LocalLightLevel(ii + (iii - 1), i + (iiii - 1)) - 2 Then updates = updates + 1
                Next

                iiii = 0
                iii = 1
                For iiii = 0 To 2
                    If LocalLightLevel(ii, i) < LocalLightLevel(ii, i + (iiii - 1)) Then LocalLightLevel(ii, i) = LocalLightLevel(ii, i + (iiii - 1)) - 1

                    If LocalLightLevel(ii, i) < LocalLightLevel(ii + (iii - 1), i + (iiii - 1)) - 2 Then updates = updates + 1
                Next
                'LocalLightLevel(ii, i) = TileData(ii, i, 8)
            Next
        Next
        If updates = 0 Then UpdateLimit = UpdateLimit + 1: updates = 1
        If UpdateLimit > 10 Then updates = 0
        ' Print updates, UpdateLimit
        ' Display
        ' Sleep

        SpreadLight2 (updates)
    Else
        UpdateLimit = 0
    End If
End Sub


Sub SetLighting
    Dim i As Byte
    Dim ii As Byte
    Dim TotalLightLevel
    For i = 0 To 31
        For ii = 0 To 41
            If GlobalLightLevel < LocalLightLevel(ii, i) Then TotalLightLevel = LocalLightLevel(ii, i) Else TotalLightLevel = GlobalLightLevel
            TotalLightLevel = TotalLightLevel - OverlayLightLevel
            If TotalLightLevel > 12 Then TotalLightLevel = 12
            If TotalLightLevel < 0 Then TotalLightLevel = 0

            PutImage ((ii - 1) * 16, (i - 1) * 16)-(((ii - 1) * 16) + 15.75, ((i - 1) * 16) + 15.75), Texture.Shadows, , (TotalLightLevel * 16, 16)-((16 * TotalLightLevel) + 15, 31)
        Next
    Next
End Sub

 
